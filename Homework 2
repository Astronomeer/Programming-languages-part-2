/*
// ПЕРВАЯ ЗАДАЧКА ИЗ ВТОРОЙ ДОМАШКИ
#include <iostream>
#include <math.h>

using namespace std;

double M_PI = 3.14159265358979323846;
double V, S, h, R, r, l;


int main()
{
	setlocale(LC_ALL, "");
	
	cout << "Введите h" << endl;
	cin >> h;
	cout << "Введите R" << endl;
	cin >> R;
	cout << "Введите r" << endl;
	cin >> r;
	cout << "Введите l" << endl;
	cin >> l;
	if (h == 0 || R == 0 || r == 0 || l == 0)
	{
		cout << " Good bye! " << endl;
		return 0;
	}


	V = ((M_PI * h) *(pow(R, 2) + R * r + pow(r, 2)))/3;
	S = M_PI * (pow(R, 2) + (R + r) * l + pow(r, 2));
		
	cout << "Объем конуса --> " << V << endl;
	cout << "Площадь конуса --> " << S << endl;
	
	return 0;
}
*/
/*
#include <iostream>
#include <math.h>

using namespace std;

double w, a, x;

int main()
{
	cout << "Enter a: " << endl;
	cin >> a;
	cout << "Enter x: " << endl;
	cin >> x;

	if ((abs(x) < 1))
	{
		w = a * log(abs(x));
		cout << " w equally: " << w << endl;
	}
	if (abs(x) >= 1)
	{
		w = sqrt(a - pow(x, 2));
		cout << " w equally : " << w << endl;
	}
	if (sqrt(a - pow(x, 2)) == 0)
	{
		cout << "sqrt < 0" << endl;
	}
	return 0;
}
*/

/*
#include <iostream>
#include <math.h>

using namespace std;

double z, b, y, x;
int main()
{
	cout << "Enter b: " << endl;
	cin >> b;
	cout << "Enter y: " << endl;
	cin >> y;
	cout << "Enter x: " << endl;
	cin >> x;

	z = log(b - y) * sqrt(b - x);
	if (sqrt(b - x) == 0 || log(b - y) == 0)
	{
		cout << "Error"; << endl;
	}
	else
	{
	cout << "z equally: " << z << endl;
	}
	return 0;

}
*/
/*
#include <iostream>
using namespace std;

int N;

int main()
{
	cout << "Enter N: ";
	cin >> N;
	int C = 1;
	
	while (C != 10) // условие вывода числового ряда
	{
		C += 1; // формула счетчика
		if (C == 2) // счетчик начинается с 1, а нам нужно 10 чисел, поэтому 2
		{
			cout << N << endl; // вывод первого числа 
		}
		N += 1; // формула вывода остальных 9
		cout << N << endl;
	}
}
*/
/*
#include<iostream>
using namespace std;

int main()
{
 double x, y;
	for (x = -4; x <= 4; x = x + 0.5)
	{
		cout << "y= " << (y = (x * x - 2 * x + 2) / (x - 1)) << endl;
	}
 return 0;
}
*/
